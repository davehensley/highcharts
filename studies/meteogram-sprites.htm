<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <title>Highcharts Meteogram Study</title>
        <!-- 1. Add these JavaScript inclusions in the head of your page -->
        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js">
        </script>
        <script type="text/javascript" src="http://code.highcharts.com/v2.3Beta/highcharts.js">
        </script>
        <!-- 2. Add the JavaScript to initialize the chart on document ready -->
        <script type="text/javascript">
        
        	var chart;
            $(function() {
				// parallel arrays for the chart data
				var symbols = [],
					precipitations = [],
					windDirections = [],
					windSpeeds = [],
					temperatures = [],
					pressures = [];
					
				// other data
				var locationName,
					locationCountry,
					pointStart,
					tooltips;
					
				// Sprites as laid out at http://om.yr.no/forklaring/symbol/
				var symbolSize = 30;
				var symbolSprites = {
					'01d': {
						x: 0,
						y: 0
					},
					'01n': {
						x: 1 * symbolSize,
						y: 0
					},
					'16': {
						x: 2 * symbolSize,
						y: 0
					},
					'02d': {
						x: 0,
						y: 1 * symbolSize
					},
					'02n': {
						x: 1 * symbolSize,
						y: 1 * symbolSize
					},
					'03d': {
						x: 0,
						y: 2 * symbolSize
					},
					'03n': {
						x: 1 * symbolSize,
						y: 2 * symbolSize
					},
					'17': {
						x: 2 * symbolSize,
						y: 2 * symbolSize
					},
					'04': {
						x: 0,
						y: 3 * symbolSize
					},
					'05d': {
						x: 0, 
						y: 4 * symbolSize
					},
					'05n': {
						x: symbolSize,
						y: 4 * symbolSize,
					},
					'18': {
						x: 2 * symbolSize,
						y: 4 * symbolSize
					},
					'06d': {
						x: 0,
						y: 5 * symbolSize
					},
					'06n': {
						x: 1 * symbolSize,
						y: 5 * symbolSize
					},
					'07d': {
						x: 0,
						y: 6 * symbolSize
					},
					'07n': {
						x: 1 * symbolSize,
						y: 6 * symbolSize
					},
					'08d': {
						x: 0,
						y: 7 * symbolSize
					},
					'08n': {
						x: 1 * symbolSize,
						y: 7 * symbolSize
					},
					'19': {
						x: 2 * symbolSize,
						y: 7 * symbolSize
					},
					'09': {
						x: 0,
						y: 8 * symbolSize
					},
					'10': {
						x: 0,
						y: 9 * symbolSize
					},
					'11': {
						x: 0,
						y: 10 * symbolSize
					},
					'12': {
						x: 0,
						y: 11 * symbolSize
					},
					'13': {
						x: 0,
						y: 12 * symbolSize
					},
					'14': {
						x: 0,
						y: 13 * symbolSize
					},
					'15': {
						x: 0,
						y: 14 * symbolSize
					},
					'20d': {
						x: 0,
						y: 15 * symbolSize
					},
					'20n': {
						x: 1 * symbolSize,
						y: 15 * symbolSize
					},
					'20m': {
						x: 2 * symbolSize,
						y: 15 * symbolSize
					},
					'21d': {
						x: 0,
						y: 16 * symbolSize
					},
					'21n': {
						x: 1 * symbolSize,
						y: 16 * symbolSize
					},
					'21m': {
						x: 2 * symbolSize,
						y: 16 * symbolSize
					},
					'22': {
						x: 0,
						y: 17 * symbolSize
					},
					'23': {
						x: 0,
						y: 18 * symbolSize
					}
				};
				
				// Create the chart
				function createChart() {
					chart = new Highcharts.Chart({
                
	                    chart: {
	                        renderTo: 'container',
	                        marginBottom: 60,
							borderWidth: 3,
							borderColor: '#C7D5D5',
							borderRadius: 0,
							backgroundColor: {
								linearGradient: [0, 25, 0, 25.1],
								stops: [
									[0, '#C7D5D5'],
									[1, 'white']
								]
							},
							plotBorderWidth: 1,
							spacingTop: 5
	                    },
						
						title: {
							text: 'Meteogram for '+ locationName +', '+ locationCountry,
							align: 'left'
						},
						
						subtitle: {
							text: 'Data from <a href="http://yr.no">yr.no</a>',
							align: 'right',
							y: 15
						},
						
						tooltip: {
							shared: true,
							
							formatter: function() {
								var html = Highcharts.dateFormat('%A, %b %e, %Y (%H:00-', this.points[0].point.from) +
									Highcharts.dateFormat('%H:00)', this.points[0].point.to);
								return html;
							}
						},
	                    
	                    credits: {
							position: {
	                        	verticalAlign: 'top',
								y: -10
							}
	                    },
						
	                    xAxis: [{
	                        type: 'datetime',
	                        tickInterval: 2 * 3600 * 1000,
							tickPosition: 'inside',
							minorTickInterval: 1 * 3600 * 1000,
							tickLength: 30,
							gridLineWidth: 1,
							gridLineColor: '#F0F0F0',
							startOnTick: false,
							endOnTick: false,
							minPadding: 0,
							maxPadding: 0,
							offset: 30,
							showLastLabel: true,
	                        labels: {
	                            formatter: function(){
	                                return Highcharts.dateFormat(
										'%H', 
										this.value
									);
	                            }
	                        }
	                    }, {
							linkedTo: 0,
							type: 'datetime',
							tickInterval: 24 * 3600 * 1000,
	                        labels: {
	                            formatter: function(){
	                                
									return Highcharts.dateFormat(
										'<span style="font-size: 12px; font-weight: bold">%a</span>, %b %e', 
										this.value
									);
	                            },
								align: 'left',
								x: 3
	                        },
							opposite: true,
							tickLength: 20,
							gridLineWidth: 1
						}],
						
						yAxis: [{ // temperature axis
							title: {
								text: null
							},
							labels: {
								formatter: function() {
									return this.value +'°'
								},
								style: {
									fontSize: '10px'
								},
								x: -3
							},
							plotLines: [{ // zero plane
								value: 0,
								color: '#C0C0C0',
								width: 1
							}],
							tickInterval: 1,
							gridLineColor: '#F0F0F0',
							maxPadding: 0.3 // make room for symbols
							
						}, { //  temperature axis
							title: {
								text: null
							},
							labels: {
								formatter: function() {
									return this.value +'°'
								},
								style: {
									fontSize: '10px'
								},
								x: 3
							},
							gridLineWidth: 0,
							opposite: true,
							linkedTo: 0
						}, { // precipitation axis
							title: {
								text: null
							},
							labels: {
								enabled: false
							},
							gridLineWidth: 0
						}],
	                    
	                    legend: {
	                        enabled: false
	                    },
						
	                    
	                    series: [{
							name: 'Temperature',
	                        data: temperatures,
							type: 'spline',
							marker: {
								enabled: false,
								states: {
									hover: {
										enabled: true
									}
								}
							},
							zIndex: 1
	                    }, {
							name: 'Precipitation',
	                        data: precipitations,
							type: 'column',
							color: '#68CFE8',
							yAxis: 2,
							groupPadding: 0,
							pointPadding: 0,
							borderWidth: 1,
							shadow: false,
							dataLabels: {
								enabled: true,
								formatter: function () {
									if (this.y > 0) {
										return this.y;
									}
								},
								style: {
									fontSize: '8px'
								}
							}
							//pointPlacement: 'between'
	                    }]
	                
	                }, function(chart) {
						
						$.each(chart.series[0].data, function(i, point) {
							
							if (i % 2 === 0) {
								// Draw the weather symbols on the temperature graph
								var sprite = symbolSprites[symbols[i]];
								if (sprite) {
									chart.renderer.image(
										//'http://symbol.yr.no/grafikk/sym/b38/'+ symbols[i] +'.png',
										'meteogram-symbols-30px.png',
										point.plotX + chart.plotLeft - 15,
										point.plotY + chart.plotTop - 30,
										90,
										570
									)
									.clip(chart.renderer.clipRect(
										point.plotX + chart.plotLeft - 15 + sprite.x,
										point.plotY + chart.plotTop - 30 + sprite.y,
										30,
										30
									))
									.translate(-sprite.x, -sprite.y)
									.attr({
										zIndex: 5
									})
									.add();
								}
								
								// wind direction code
								var windDirection = (Math.round(windDirections[i] / 5) * 5 % 360).toString();
								while (windDirection.length < 3) { // pad
									windDirection = '0' + windDirection;
								}
								
								// wind speed code
								var windSpeed = (Math.floor(windSpeeds[i] / 25) * 25).toString();
								while (windSpeed.length < 4) { // pad
									windSpeed = '0' + windSpeed;
								}
								
								// Draw the wind arrows
								chart.renderer.image(
									'http://fil.nrk.no/yr/grafikk/vindpiler/32/vindpil.'+ windSpeed +'.'+ windDirection +'.png',
									point.plotX + chart.plotLeft - 15,
									240,
									30,
									30
								)
								.attr({
									zIndex: 5
								})
								.add();
							}
						})
						
	                    
	                });
				}
				
				// Load the data
                $.ajax({
                    url: 'forecast.xml',
                    dataType: 'xml',
                    success: function (xmldoc) {
                    	$('tabular time', xmldoc).each(function(i, time) {
							
							// get the times -
							// only Safari can't parse ISO8601 so we need to do some replacements 
							var from = $(time).attr('from') +' UTC';
							from = from.replace(/-/g, '/').replace('T', ' ');
							from = Date.parse(from);
							var to = $(time).attr('to') +' UTC';
							to = to.replace(/-/g, '/').replace('T', ' ');
							to = Date.parse(to);
							var middle = (from + to) / 2;
							
							if (to > pointStart + 4 * 24 * 3600 * 1000) {
								return;
							}
							
							// populate the parallel arrays
                        	symbols.push($('symbol', time).attr('var').match(/[0-9]{2}[dnm]?/)[0]);
							precipitations.push({
								x: middle,
								y: parseFloat($('precipitation', time).attr('value'))
							});
							windDirections.push(parseFloat($('windDirection', time).attr('deg')));
							windSpeeds.push(parseFloat($('windSpeed', time).attr('mps')));
							temperatures.push({
								x: middle,
								y: parseInt($('temperature', time).attr('value')),
								from: from,
								to: to
							});
							pressures.push(parseFloat($('pressure', time).attr('value')));
							
							if (i == 0) {
								pointStart = middle;
							}
							
						});
						
						
						// populate other data
						locationName = $('location name', xmldoc).text();
						locationCountry = $('location country', xmldoc).text();
						
						// create the chart when the data is loaded
						createChart();
                    }
                });
                
                
            });
        </script>
    </head>
    <body>
        <!-- 3. Add the container -->
        <div id="outer-container" style="position: relative; width: 800px; margin: 0 auto">
    	    <div id="container" style="height: 300px;">
        	
	        </div>
        </div>
    </body>
</html>
