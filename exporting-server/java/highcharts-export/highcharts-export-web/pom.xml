<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.highcharts.export</groupId>
		<artifactId>highcharts-export</artifactId>
		<version>2.1.0</version>
	</parent>
	<artifactId>highcharts-export-web</artifactId>
	<packaging>war</packaging>
	<name>highcharts-export-web</name>
	<url>http://maven.apache.org</url>
	<organization>
		<name>Highsoft</name>
		<url>http://highcharts.com</url>
	</organization>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.2.0.RELEASE</spring.version>
		<cglib.version>2.2.2</cglib.version>
		<java.version>1.6</java.version>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<beanstalk.versionLabel>export-${maven.build.timestamp}</beanstalk.versionLabel>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.highcharts.export</groupId>
			<artifactId>highcharts-export-convert</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<warName>${project.artifactId}</warName>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
					<webResources>
						<resource>
							<directory>src/main/webapp/WEB-INF/pages</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF/pages</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpapplicationxml>true</wtpapplicationxml>
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<webApp>
						<contextPath>/export</contextPath>
					</webApp>
					<!-- use war with command mvn jetty:run-exploded -->
					<war>${basedir}/target/highcharts-cloud-editor-web</war>
					<reload>manual</reload>
					<systemProperties>
						<systemProperty>
							<name>log4j.configuration</name>
							<value>file:./src/main/resources/log4j.properties</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>br.com.ingenieux</groupId>
				<artifactId>beanstalk-maven-plugin</artifactId>
				<version>1.1.1</version>
				<configuration>
					<!-- ################ required for upload-source-bundle ################ -->
					<s3Bucket>war-bucket</s3Bucket>
					<s3Key>${project.artifactId}/${project.build.finalName}-${beanstalk.versionLabel}.war</s3Key>


					<!-- ################ required for create-application-version ################ -->
					<!-- The application name is fixed -->
					<applicationName>cloudchart</applicationName>

					<!-- Just to be explicit (plugin will pick this name anyway) -->
					<versionLabel>${beanstalk.versionLabel}</versionLabel>

					<!-- Use the project artifact id as name -->
					<versionDescription>${project.artifactId}</versionDescription>

					<!-- Disable auto creation. The application is running already -->
					<autoCreateApplication>false</autoCreateApplication>


					<!-- ################ required for create-environment ################ -->
					<!-- This will create a new environment with a timestamp -->
					<environmentName>${beanstalk.versionLabel}</environmentName>

					<!-- Not needed, the CNAME will be created from the environmentName -->
					<!-- <cnamePrefix>editor</cnamePrefix> -->

					<!-- Oregon -->
					<region>us-west-2</region>

					<!-- TemplateName is Called Saved Configurations in aws console -->
					<templateName>export-server-24092013</templateName>

					<!-- Override these settings in chartcloud-config -->
					<optionSettings>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:application</namespace>
							<optionName>Application Healthcheck URL</optionName>
							<value>/demo</value>
						</optionSetting>
						<optionSetting>
							<namespace>aws:elasticbeanstalk:sns:topics</namespace>
							<optionName>Notification Endpoint</optionName>
							<value>gert@highsoft.com</value>
						</optionSetting>
					</optionSettings>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
